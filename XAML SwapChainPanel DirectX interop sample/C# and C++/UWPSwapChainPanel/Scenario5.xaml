<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="SwapChainPanel.Scenario5"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SwapChainPanel"
    xmlns:common="using:UWPSwapChainPanel.Common"
    xmlns:renderer="using:DirectXPanels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

  <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid x:Name="Input" Grid.Row="0">      
      <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
        You can add UI Automation (UIA) accessibility support for DirectX content by creating accessibility peers. <LineBreak/>
        In the example below a custom UI Automation peer is created for the derived SwapChainPanel type, which in turn 
        has child peers consisting of a default peer for the XAML TextBlock content and a second custom peer type for the 
        custom rectangle item drawn using Direct2D.
      </TextBlock>        
      <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
          <VisualState x:Name="InputFullScreenLandscape"/>
          <VisualState x:Name="InputFilled"/>
          <VisualState x:Name="InputFullScreenPortrait"/>
          <VisualState x:Name="InputSnapped"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>

    <Grid x:Name="Output" Grid.Row="1">
      <Border x:Name="ParagraphBorder" BorderBrush="Black" BorderThickness="1">
        <!-- A SwapChainPanel displaying UIA-accessible XAML and Direct2D content -->
        <renderer:UIAD2DPanel x:Name="UIAPanel" VerticalAlignment="Top" Height="400" Width="500" AutomationProperties.AutomationId="UIAPanel1" AutomationProperties.Name="UIAPanel">
          <TextBlock Text="XAML text on top of DirectX content" Foreground="Orange" Height="50" FontSize="26" AutomationProperties.AutomationId="ContentTextBlock1" AutomationProperties.Name="XAML text in UIAD2DPanel" />
        </renderer:UIAD2DPanel>
      </Border>
      <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
          <VisualState x:Name="OutputFullScreenLandscape"/>
          <VisualState x:Name="OutputFilled"/>
          <VisualState x:Name="OutputFullScreenPortrait"/>
          <VisualState x:Name="OutputSnapped"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </Grid>
</common:LayoutAwarePage>
